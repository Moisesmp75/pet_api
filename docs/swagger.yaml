basePath: /
definitions:
  common.Pagination:
    properties:
      current_page:
        type: integer
      has_next_page:
        type: boolean
      has_prev_page:
        type: boolean
      items_per_page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  request.AdoptionRequest:
    properties:
      comment:
        type: string
      date:
        type: string
      pet_id:
        type: integer
      user_id:
        type: integer
    required:
    - comment
    - date
    - pet_id
    - user_id
    type: object
  request.LoginRequest:
    properties:
      identity:
        type: string
      password:
        type: string
      role_id:
        type: integer
    required:
    - identity
    - password
    - role_id
    type: object
  request.PasswordResetRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  request.PetRequest:
    properties:
      born_date:
        type: string
      breed:
        type: string
      color:
        type: string
      description:
        type: string
      gender:
        type: string
      height:
        type: number
      location:
        type: string
      name:
        type: string
      pet_type_id:
        type: integer
      user_id:
        type: integer
      weight:
        type: number
    required:
    - born_date
    - breed
    - color
    - height
    - location
    - name
    - pet_type_id
    - user_id
    - weight
    type: object
  request.ReportRequest:
    properties:
      description:
        type: string
      reported_user_id:
        type: integer
      reporter_user_id:
        type: integer
    required:
    - description
    - reported_user_id
    - reporter_user_id
    type: object
  request.UpdatePetRequest:
    properties:
      adopted:
        type: boolean
      born_date:
        type: string
      breed:
        type: string
      color:
        type: string
      description:
        type: string
      gender:
        type: string
      height:
        type: number
      location:
        type: string
      name:
        type: string
      pet_type_id:
        type: integer
      weight:
        type: number
    type: object
  request.UpdateUserRequest:
    properties:
      address:
        type: string
      city:
        type: string
      dni:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_name:
        type: string
    type: object
  request.UserRequest:
    properties:
      address:
        type: string
      city:
        type: string
      dni:
        type: string
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role_id:
        type: integer
      user_name:
        type: string
    required:
    - dni
    - email
    - last_name
    - name
    - password
    - phone_number
    - role_id
    type: object
  request.VisitRequest:
    properties:
      date:
        type: string
      pet_id:
        type: integer
      user_id:
        type: integer
    required:
    - date
    - pet_id
    - user_id
    type: object
  response.AdoptionResponse:
    properties:
      adoption_date:
        type: string
      application_date:
        type: string
      comment:
        type: string
      id:
        type: integer
      pet:
        $ref: '#/definitions/response.PetResponse'
      user:
        $ref: '#/definitions/response.UserResponse'
    type: object
  response.BaseResponse-response_AdoptionResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.AdoptionResponse'
      success:
        type: boolean
    type: object
  response.BaseResponse-response_LoginResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.LoginResponse'
      success:
        type: boolean
    type: object
  response.BaseResponse-response_PetResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.PetResponse'
      success:
        type: boolean
    type: object
  response.BaseResponse-response_ReportResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.ReportResponse'
      success:
        type: boolean
    type: object
  response.BaseResponse-response_UserResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.UserResponse'
      success:
        type: boolean
    type: object
  response.BaseResponse-response_VisitResponse:
    properties:
      message:
        items:
          type: string
        type: array
      resource:
        $ref: '#/definitions/response.VisitResponse'
      success:
        type: boolean
    type: object
  response.BaseResponsePag-response_AdoptionResponse:
    properties:
      message:
        items:
          type: string
        type: array
      meta:
        $ref: '#/definitions/common.Pagination'
      resource:
        $ref: '#/definitions/response.AdoptionResponse'
      success:
        type: boolean
    type: object
  response.BaseResponsePag-response_PetResponse:
    properties:
      message:
        items:
          type: string
        type: array
      meta:
        $ref: '#/definitions/common.Pagination'
      resource:
        $ref: '#/definitions/response.PetResponse'
      success:
        type: boolean
    type: object
  response.BaseResponsePag-response_ReportResponse:
    properties:
      message:
        items:
          type: string
        type: array
      meta:
        $ref: '#/definitions/common.Pagination'
      resource:
        $ref: '#/definitions/response.ReportResponse'
      success:
        type: boolean
    type: object
  response.BaseResponsePag-response_UserResponse:
    properties:
      message:
        items:
          type: string
        type: array
      meta:
        $ref: '#/definitions/common.Pagination'
      resource:
        $ref: '#/definitions/response.UserResponse'
      success:
        type: boolean
    type: object
  response.BaseResponsePag-response_VisitResponse:
    properties:
      message:
        items:
          type: string
        type: array
      meta:
        $ref: '#/definitions/common.Pagination'
      resource:
        $ref: '#/definitions/response.VisitResponse'
      success:
        type: boolean
    type: object
  response.LoginResponse:
    properties:
      email:
        type: string
      exp:
        type: string
      iat:
        type: string
      role:
        type: string
      token:
        type: string
    type: object
  response.PetResponse:
    properties:
      adppted:
        type: boolean
      age:
        type: integer
      breed:
        type: string
      color:
        type: string
      description:
        type: string
      gender:
        type: string
      height:
        type: number
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      location:
        type: string
      name:
        type: string
      pet_type:
        type: string
      user:
        $ref: '#/definitions/response.UserResponse'
      weight:
        type: number
    type: object
  response.ReportResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      report_date:
        type: string
      reported_user:
        $ref: '#/definitions/response.UserResponse'
      reporter:
        $ref: '#/definitions/response.UserResponse'
    type: object
  response.UserResponse:
    properties:
      address:
        type: string
      city:
        type: string
      dni:
        type: string
      email:
        type: string
      id:
        type: integer
      image_url:
        type: string
      last_name:
        type: string
      name:
        type: string
      pets:
        items:
          $ref: '#/definitions/response.PetResponse'
        type: array
      phone_number:
        type: string
      role:
        type: string
      user_name:
        type: string
    type: object
  response.VisitResponse:
    properties:
      date:
        type: string
      id:
        type: integer
      pet:
        $ref: '#/definitions/response.PetResponse'
      user:
        $ref: '#/definitions/response.UserResponse'
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a HairyPets API swagger
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: HairyPets API
  version: "1.0"
paths:
  /adoptions:
    get:
      consumes:
      - application/json
      description: Obtiene una lista paginada de todas las adopciones.
      parameters:
      - description: Offset para paginación
        in: query
        name: offset
        type: integer
      - description: Límite de resultados por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponsePag-response_AdoptionResponse'
      summary: Lista todas las adopciones
      tags:
      - adoptions
    post:
      consumes:
      - application/json
      description: Crea una nueva adopción en la aplicación.
      parameters:
      - description: Solicitud de adopción
        in: body
        name: adoptionRequest
        required: true
        schema:
          $ref: '#/definitions/request.AdoptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_AdoptionResponse'
      summary: Crea una nueva adopción
      tags:
      - adoptions
  /adoptions/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una adopción según su ID.
      parameters:
      - description: ID de la adopción
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_AdoptionResponse'
      summary: Obtiene una adopción por ID
      tags:
      - adoptions
  /pets:
    get:
      consumes:
      - application/json
      description: Lista todas las mascotas de la aplicación.
      parameters:
      - description: Offset de paginación
        in: query
        name: offset
        type: integer
      - description: Límite de resultados por página
        in: query
        name: limit
        type: integer
      - description: Filtrar mascota por raza
        in: query
        name: breed
        type: integer
      - description: Filtrar mascota por color
        in: query
        name: color
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponsePag-response_PetResponse'
      summary: Lista a todas las mascotas
      tags:
      - pets
    post:
      consumes:
      - application/json
      description: Crea una nueva mascota en la aplicación.
      parameters:
      - description: Pet request payload
        in: body
        name: petRequest
        required: true
        schema:
          $ref: '#/definitions/request.PetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse-response_PetResponse'
      summary: Crea una nueva mascota
      tags:
      - pets
  /pets/{id}:
    get:
      consumes:
      - application/json
      description: Muestra una mascota con el id.
      parameters:
      - description: Pet id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse-response_PetResponse'
      summary: Mostrar a una mascota
      tags:
      - pets
    patch:
      consumes:
      - application/json
      description: Actualiza los detalles de una mascota identificada por su ID.
      parameters:
      - description: Pet id
        in: path
        name: id
        required: true
        type: integer
      - description: Pet update request payload
        in: body
        name: updatePetRequest
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse-response_PetResponse'
      summary: Actualiza los detalles de una mascota
      tags:
      - pets
  /pets/{id}/images:
    patch:
      consumes:
      - multipart/form-data
      description: Actualiza las imágenes de una mascota identificada por su ID.
      parameters:
      - description: Pet id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse-response_PetResponse'
      summary: Actualiza las imágenes de una mascota
      tags:
      - pets
  /reports:
    get:
      consumes:
      - application/json
      description: Obtiene una lista paginada de todos los informes.
      parameters:
      - description: Offset para paginación
        in: query
        name: offset
        type: integer
      - description: Límite de resultados por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponsePag-response_ReportResponse'
      summary: Lista todos los informes
      tags:
      - reports
    post:
      consumes:
      - application/json
      description: Crea un nuevo informe en la aplicación.
      parameters:
      - description: Solicitud de informe
        in: body
        name: reportRequest
        required: true
        schema:
          $ref: '#/definitions/request.ReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_ReportResponse'
      summary: Crea un nuevo informe
      tags:
      - reports
  /reports/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de un informe según su ID.
      parameters:
      - description: ID del informe
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_ReportResponse'
      summary: Obtiene un informe por ID
      tags:
      - reports
  /users:
    get:
      consumes:
      - application/json
      description: Lista todos los usuarios de la aplicación.
      parameters:
      - description: Offset de paginación
        in: query
        name: offset
        type: integer
      - description: Límite de resultados por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponsePag-response_UserResponse'
      summary: Lista todos los usuarios
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Crea un nuevo usuario en la aplicación.
      parameters:
      - description: Solicitud de creación de usuario
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_UserResponse'
      summary: Crea un nuevo usuario
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Muestra un usuario con el ID especificado.
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_UserResponse'
      summary: Muestra un usuario
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Actualiza los detalles de usuario identificado por su ID.
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      - description: Solicitud de actualización de usuario
        in: body
        name: updateUserRequest
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_UserResponse'
      summary: Actualiza los detalles de usuario
      tags:
      - users
  /users/{id}/image:
    patch:
      consumes:
      - multipart/form-data
      description: Actualiza la imagen de usuario identificado por su ID.
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      - description: Imagen de usuario
        in: formData
        name: user_img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_UserResponse'
      summary: Actualiza la imagen de usuario
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Inicia sesión de usuario con credenciales proporcionadas.
      parameters:
      - description: Solicitud de inicio de sesión
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_LoginResponse'
      summary: Inicia sesión de usuario
      tags:
      - users
  /users/recover:
    post:
      consumes:
      - application/json
      description: Envía un correo electrónico con una nueva contraseña generada.
      parameters:
      - description: Solicitud de restablecimiento de contraseña
        in: body
        name: passwordResetRequest
        required: true
        schema:
          $ref: '#/definitions/request.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_UserResponse'
      summary: Recupera la contraseña de usuario
      tags:
      - users
  /visits:
    get:
      consumes:
      - application/json
      description: Obtiene una lista paginada de todas las visitas.
      parameters:
      - description: Offset para paginación
        in: query
        name: offset
        type: integer
      - description: Límite de resultados por página
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponsePag-response_VisitResponse'
      summary: Lista todas las visitas
      tags:
      - visits
    post:
      consumes:
      - application/json
      description: Crea una nueva visita en la aplicación.
      parameters:
      - description: Solicitud de visita
        in: body
        name: visitRequest
        required: true
        schema:
          $ref: '#/definitions/request.VisitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_VisitResponse'
      summary: Crea una nueva visita
      tags:
      - visits
  /visits/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una visita según su ID.
      parameters:
      - description: ID de la visita
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Respuesta exitosa
          schema:
            $ref: '#/definitions/response.BaseResponse-response_VisitResponse'
      summary: Obtiene una visita por ID
      tags:
      - visits
swagger: "2.0"
